[{"/home/manasvi/Job-Portal-Mern_stack/frontend/src/index.js":"1","/home/manasvi/Job-Portal-Mern_stack/frontend/src/App.js":"2","/home/manasvi/Job-Portal-Mern_stack/frontend/src/reportWebVitals.js":"3","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/Register.js":"4","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/Login.js":"5","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterHome.js":"6","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/Home.js":"7","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/ApplicantHome.js":"8","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterCreateJob.js":"9","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterJobs.js":"10","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterViewApps.js":"11","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterProfile.js":"12","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/ApplicantMyApps.js":"13","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterEmployees.js":"14","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/ApplicantProfile.js":"15","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/ApplicantSearchJob.js":"16","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/Modal.js":"17"},{"size":500,"mtime":1611496055177,"results":"18","hashOfConfig":"19"},{"size":1826,"mtime":1611496055177,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1611496055177,"results":"21","hashOfConfig":"19"},{"size":3684,"mtime":1611496055181,"results":"22","hashOfConfig":"19"},{"size":2676,"mtime":1611496055177,"results":"23","hashOfConfig":"19"},{"size":1516,"mtime":1611496055177,"results":"24","hashOfConfig":"19"},{"size":1041,"mtime":1611496055177,"results":"25","hashOfConfig":"19"},{"size":1341,"mtime":1611496055177,"results":"26","hashOfConfig":"19"},{"size":7955,"mtime":1611662085055,"results":"27","hashOfConfig":"19"},{"size":7851,"mtime":1611677295058,"results":"28","hashOfConfig":"19"},{"size":10141,"mtime":1611659257275,"results":"29","hashOfConfig":"19"},{"size":6323,"mtime":1611638783471,"results":"30","hashOfConfig":"19"},{"size":7530,"mtime":1611658580545,"results":"31","hashOfConfig":"19"},{"size":9237,"mtime":1611659217268,"results":"32","hashOfConfig":"19"},{"size":13720,"mtime":1612359405321,"results":"33","hashOfConfig":"19"},{"size":14675,"mtime":1611656385525,"results":"34","hashOfConfig":"19"},{"size":1073,"mtime":1611496055181,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"4ucvrr",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"38"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"/home/manasvi/Job-Portal-Mern_stack/frontend/src/index.js",[],["86","87"],"/home/manasvi/Job-Portal-Mern_stack/frontend/src/App.js",["88","89"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\n\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport RecruiterHome from './components/RecruiterHome'\nimport ApplicantHome from './components/ApplicantHome'\nimport ApplicantProfile from './components/ApplicantProfile'\n\nimport CreateJob from'./components/RecruiterCreateJob'\nimport ApplicantSearchJob from'./components/ApplicantSearchJob'\nimport { AccordionSummary } from '@material-ui/core';\nimport RecruiterJobs from './components/RecruiterJobs';\nimport RecruiterViewApps from './components/RecruiterViewApps';\nimport ApplicantMyApps from'./components/ApplicantMyApps'\nimport RecruiterProfile from'./components/RecruiterProfile'\nimport RecruiterEmployees from'./components/RecruiterEmployees'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <br/>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/register\" component={Register}/>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/RecruiterHome\" component={RecruiterHome}/>\n        <Route path=\"/ApplicantHome\" component={ApplicantHome}/>\n        <Route path=\"/ApplicantProfile\" component={ApplicantProfile}/>\n        <Route path=\"/CreateJob\" component={CreateJob}/>\n        <Route path=\"/SearchJob\" component={ApplicantSearchJob}/>\n        <Route path=\"/ActiveJobs\" component={RecruiterJobs}/>\n        <Route path=\"/RecruiterViewApps\" component={RecruiterViewApps}/>\n        <Route path=\"/MyApps\" component={ApplicantMyApps}/>\n        <Route path=\"/RecruiterProfile\" component={RecruiterProfile}/>\n        <Route path=\"/Employees\" component={RecruiterEmployees}/>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","/home/manasvi/Job-Portal-Mern_stack/frontend/src/reportWebVitals.js",[],"/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/Register.js",["90","91"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport axios from 'axios'\n\nexport default class Register extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            username: \"\",\n            email:\"\",\n            passwrod:\"\",\n            type:\"Applicant\"\n        }\n\n        this.onInputChange = this.onInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault()\n\n        const newUser = {\n            username: this.state.username,\n            password: this.state.password,\n            email: this.state.email,\n            type: this.state.type\n        }\n\n        const{username, email, password,type} = newUser;\n\n        if (!username || !email || !password || !type){\n            alert(\"Enter all the fields!\")\n        }\n        else{\n            axios.post(\"http://localhost:5000/register\", newUser).then(res => {\n                if (res.data === 1) alert(\"This username has already been taken\");    \n                else  alert(\"Registration done:)\")\n            \n            });\n        }\n\n        //reset fields:\n        \n        this.setState({\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            fullname: \"\",\n            type: \"Applicant\"\n        });\n\n    }\n    onInputChange = (e) =>{\n\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    render() {\n        return (\n        <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n                <Nav className=\"mr-auto\">\n                    <Link to=\"/register\" className=\"navbar-brand\">Register</Link>\n                    <li className=\"navbar-item\">\n                        <Link to=\"/\" className=\"nav-link\">Home</Link>\n                    </li> \n                    <li className=\"navbar-item\">\n                        <Link to=\"/login\" className=\"nav-link\">Login</Link>\n                    </li>\n                </Nav>\n            </Navbar>\n            <br/><br/><br/><br/>\n\n            <form align=\"center\" onSubmit = {this.handleSubmit}>\n                <label><h1>REGISTER</h1></label><br/>\n                <div className=\"form-group\">\n                    <label>Enter Username:</label>\n                    <br/>\n                    <input type='text' name='username' value = {this.state.username} onChange={this.onInputChange}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Enter Password:</label>\n                    <br/>\n                    <input type='text' name='password' value = {this.state.password}  onChange={this.onInputChange}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Enter Email:</label>\n                    <br/>\n                    <input type='text' name='email'value = {this.state.email}  onChange={this.onInputChange}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select User Type:</label>\n                    <br/>\n                    <select name=\"type\" value = {this.state.type} onChange={this.onInputChange}>\n                        <option value=\"Applicant\">Applicant</option>\n                        <option value=\"Recruiter\">Recruiter</option>\n                    </select>\n                </div>\n                \n                <br/><br/><br/>\n                <button>SUBMIT</button>\n            </form>\n        </div>\n        \n    );\n  }\n}\n","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/Login.js",["92","93","94","95"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport axios from'axios'\n\nexport default class Register extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      email :\"\",\n      password :\"\"\n    }\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleSubmit = (e) =>{\n    e.preventDefault()\n\n    const newUser = {\n        email: this.state.email,\n        password: this.state.password\n    }\n    const{email, password} = newUser;\n\n\n    axios.post(\"http://localhost:5000/login\", newUser).then(res => {\n      \n      if(!res.data.user)alert(res.data.msg)\n      else{\n        localStorage.setItem(\"email\", res.data.user.email);\n        localStorage.setItem(\"type\", res.data.user.type);\n        localStorage.setItem(\"username\", res.data.user.username);\n\n\n        if(res.data.user.type === \"Applicant\") this.props.history.push(\"/ApplicantHome\");\n        else this.props.history.push(\"/RecruiterHome\");\n        \n      }         \n    });\n\n    //reset fields:\n        \n    this.setState({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      fullname: \"\",\n      type: \"Applicant\"\n  });\n  }\n  onInputChange = (e) =>{\n\n    this.setState({\n        [e.target.name] : e.target.value\n    })\n  }\n\n\n  render() {\n    return (\n      <div>\n       <Navbar bg=\"dark\" variant=\"dark\">\n            <Nav className=\"mr-auto\">\n                <Link to=\"/login\" className=\"navbar-brand\">Login</Link>\n                <li className=\"navbar-item\">\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\n                </li> \n                <li className=\"navbar-item\">\n                    <Link to=\"/register\" className=\"nav-link\">Register</Link>\n                </li>\n            </Nav>\n        </Navbar>\n\n        <br/><br/><br/><br/>\n\n        <form align=\"center\" onSubmit = {this.handleSubmit}>\n          <label><h1>LOGIN</h1></label><br/>\n\n          <div className=\"form-group\">\n            <label>Enter Email:</label>\n            <br/>\n            <input type='text' name='email'value = {this.state.email}  onChange={this.onInputChange}/>\n          </div>\n          <div className=\"form-group\">\n            <label>Enter Password:</label>\n            <br/>\n            <input type='text' name='password' value = {this.state.password}  onChange={this.onInputChange}/>\n          </div>\n          <br/><br/><br/>\n          <button>SUBMIT</button>\n        </form>\n      </div>\n    );\n  }\n}\n","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterHome.js",["96","97","98","99"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Box from '@material-ui/core/Box';\nimport axios from \"axios\";\n\nexport default class RecruiterHome extends Component {\n\n\n  render() {\n    return (\n      <div>\n       <Navbar bg=\"dark\" variant=\"dark\">\n            <Nav className=\"mr-auto\">\n                <Link to=\"/RecruiterHome\" className=\"navbar-brand\">Home</Link>\n                <li className=\"navbar-item\">\n                    <Link to=\"/ActiveJobs\" className=\"nav-link\">Job Listings</Link>\n                </li>   \n                <li className=\"navbar-item\">\n                    <Link to=\"/CreateJob\" className=\"nav-link\">Create Job</Link>\n                </li>   \n                <li className=\"navbar-item\">\n                    <Link to=\"/RecruiterProfile\" className=\"nav-link\">My Profile</Link>\n                </li>      \n                <li className=\"navbar-item\">\n                    <Link to=\"Employees\" className=\"nav-link\">My Employees</Link>\n                </li>     \n            </Nav>\n            <Link to=\"/\" className=\"nav-link\">Logout</Link>    \n        </Navbar>\n        <br/><br/><br/><br/>\n        <h1 style={{textAlign:\"center\"}}>Welcome {localStorage.getItem(\"username\")} !!</h1>\n        <br/>\n        <h2 style={{textAlign:\"center\"}}>You are a recruiter</h2>\n\n      </div>\n\n    );\n  }\n}\n","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/Home.js",["100","101","102"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Box from '@material-ui/core/Box';\n\n\nexport default class Home extends Component {\n\n\n  componentDidMount() {\n    localStorage.clear();\n  }\n\n\n  render() {\n    return (\n      <div>\n       <Navbar bg=\"dark\" variant=\"dark\">\n            <Nav className=\"mr-auto\">\n                <Link to=\"/\" className=\"navbar-brand\">Home</Link>\n                <li className=\"navbar-item\">\n                    <Link to=\"/login\" className=\"nav-link\">Login</Link>\n                </li> \n                <li className=\"navbar-item\">\n                    <Link to=\"/register\" className=\"nav-link\">Register</Link>\n                </li>              \n            </Nav>\n        </Navbar>\n        <br/><br/><br/><br/>\n        <div style={{textAlign:\"center\"}}><h1>WELCOME!!</h1></div>\n       \n      </div>\n\n    );\n  }\n}\n","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/ApplicantHome.js",["103","104","105"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Box from '@material-ui/core/Box';\n\nexport default class ApplicantHome extends Component {\n\n    \n  render() {\n    return (\n      <div>\n       <Navbar bg=\"dark\" variant=\"dark\">\n            <Nav className=\"mr-auto\">\n                <Link to=\"/ApplicantHome\" className=\"navbar-brand\">Home</Link>\n                <li className=\"navbar-item\">\n                    <Link to=\"/ApplicantProfile\" className=\"nav-link\">Profile</Link>\n                </li>\n                <li className=\"navbar-item\">\n                    <Link to=\"/MyApps\" className=\"nav-link\">My Applications</Link>\n                </li>                 \n                <li className=\"navbar-item\">\n                    <Link to=\"/SearchJob\" className=\"nav-link\">Search Job</Link>\n                </li>\n            </Nav>\n\n            <Link to=\"/\" className=\"nav-link\">Logout</Link>    \n        </Navbar>\n        <br/><br/><br/><br/>\n        <h1 style={{textAlign:\"center\"}}>Welcome {localStorage.getItem(\"username\")} !!</h1>\n        <br/>\n        <h3 style={{textAlign:\"center\"}}>You are an applicant</h3>\n      </div>\n\n    );\n  }\n}\n","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterCreateJob.js",["106","107","108","109","110","111","112","113"],"import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Box from '@material-ui/core/Box';\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from 'react-bootstrap/FormControl'\nimport { Button, FormGroup, ControlLabel } from \"react-bootstrap\";\nimport { Col, Row } from \"react-bootstrap\";\n\n\nexport default class CreateJob extends Component {\n\n    state = {\n        email: \"\",\n        username: \"\",\n        title: \"\",\n        applicants: \"\",\n        positions: \"\",\n        type: \"Full-time\",\n        duration: \"1\",\n        salary: \"\",\n        deadline: \"\",\n        skills: \"\"\n    }\n\n    onchange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    componentDidMount() {\n        const newUser = {\n            email: localStorage.getItem(\"email\"),\n            type: localStorage.getItem(\"type\")\n        };\n        if (newUser.type !== \"Recruiter\") this.props.history.push(\"/\");\n\n        this.setState({ email: newUser.email });\n        axios\n            .post(\"http://localhost:5000/user\", newUser)\n            .then(response => {\n                this.setState({ username: response.data.username });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const newJob = {\n\n            email: this.state.email,\n            username: this.state.username,\n            title: this.state.title,\n            applicants: this.state.applicants,\n            positions: this.state.positions,\n            type: this.state.type,\n            duration: this.state.duration,\n            salary: this.state.salary,\n            deadline: this.state.deadline,\n            skills: this.state.skills\n\n        }\n\n        const { username, email, title, applicants, positions, type, duration, salary, deadline, skills } = newJob;\n\n        console.log()\n        if (!username || !email || !title || !applicants || !positions || !type || !duration || !salary || !deadline || !skills)\n            alert(\"Enter all the fields!\")\n        else if ((salary - '0') < 0 || !Number.isInteger(salary-'0')) alert('Salary field can take only positive integer values!!')\n        else if ((applicants- '0') < 0 || !Number.isInteger(applicants- '0')) alert('Applicants field can take only positive integer values!!')\n        else if ((positions- '0') < 0 || !Number.isInteger(positions- '0')) alert('Positions field can take only positive integer values!!')\n\n        else {\n            axios.post(\"http://localhost:5000/recruiter/createJob\", newJob).then(res => {\n                alert(\"Created Job\")\n            });\n        }\n\n        this.setState({\n            title: \"\",\n            applicants: \"\",\n            positions: \"\",\n            type: \"Full-time\",\n      \n            duration: \"1\",\n            salary: \"\",\n            deadline: \"\",\n            skills: \"\"\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Nav className=\"mr-auto\">\n                        <Link to=\"/CreateJob\" className=\"navbar-brand\">Create Job</Link>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/RecruiterHome\" className=\"nav-link\">Home</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/ActiveJobs\" className=\"nav-link\">Job Listings</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/RecruiterProfile\" className=\"nav-link\">My Profile</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"Employees\" className=\"nav-link\">My Employees</Link>\n                        </li>\n                    </Nav>\n                    <Link to=\"/\" className=\"nav-link\">Logout</Link>\n                </Navbar>\n                <br /><br /><br />\n                <div style={{ textAlign: \"center\" }}><h1>Create a New Job</h1></div><br></br><br></br>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridTitle\">\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter title\" onChange={this.onchange} value={this.state.title} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                            <Form.Label>Job Type</Form.Label>\n                            <Form.Control as=\"select\" name=\"type\" defaultValue=\"Full-time\" defaultValue=\"\" onChange={this.onchange} value={this.state.type} >\n\n                                <option>Full-time</option>\n                                <option>Part-time</option>\n                                <option>Work from Home</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                            <Form.Label>Duration (in months)</Form.Label>\n                            <Form.Control as=\"select\" name=\"duration\" defaultValue=\"1\" onChange={this.onchange} value={this.state.duration}>\n                                <option>0</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                                <option>6</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                            <Form.Label>Max Applicants</Form.Label>\n                            <Form.Control type=\"number\" name=\"applicants\" min={1} placeholder=\"Enter max applicants\" onChange={this.onchange} value={this.state.applicants} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip\">\n                            <Form.Label>Max Postions</Form.Label>\n                            <Form.Control type=\"number\" name=\"positions\" min={1} placeholder=\"Enter max positions\" onChange={this.onchange} value={this.state.positions} />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Group controlId=\"formGridCity\">\n                        <Form.Label>Salary (per month)</Form.Label>\n                        <Form.Control type=\"number\" step = \"500\" name=\"salary\" min={0} placeholder=\"Enter salary\" onChange={this.onchange} value={this.state.salary} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGridCity\">\n                        <Form.Label>Deadline</Form.Label>\n                        <Form.Control type=\"date\" name=\"deadline\" placeholder=\"Enter deadline for application\" onChange={this.onchange} value={this.state.deadline} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGridCity\">\n                        <Form.Label>Skills</Form.Label>\n                        <Form.Control type=\"text\" name=\"skills\" placeholder=\"Enter skills required\" onChange={this.onchange} value={this.state.skills} />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        CREATE JOB\n                    </Button>\n                </Form>\n            </div>\n        )\n    }\n}","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterJobs.js",["114","115","116"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Box from '@material-ui/core/Box';\nimport axios from \"axios\";\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\n\n\nimport moment from 'moment'\n\n\nexport default class RecruiterJobs extends Component {\n\n    state = {\n        jobs : [],\n        email : \"\"\n    }\n\n    componentDidMount(){\n\n        const newUser = {\n            email: localStorage.getItem(\"email\"),\n            type: localStorage.getItem(\"type\")\n        };\n        if (newUser.type !== \"Recruiter\") this.props.history.push(\"/\");\n        this.setState({ email: newUser.email });\n        axios\n            .post(\"http://localhost:5000/recruiter/getActiveJobs\",newUser)\n            .then(response => {\n                this.setState({ jobs: response.data });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        console.log(this.state.jobs)\n        \n    }\n\n    deadline = (idx)=>{\n\n        var value = prompt('Enter New Deadline')\n        if(!isNaN(value) && value){\n            const jobs = [...this.state.jobs]\n            jobs[idx].deadline = value\n            const obj = jobs[idx]\n            axios\n                .post(\"http://localhost:5000/recruiter/editJob\",obj)\n                .then(response => {\n                    this.setState({jobs :jobs});\n                    alert(\"Changes Saved :)\")\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n            \n        }\n        else alert(\"Invalid value\")\n    }\n    applicants = (idx)=>{\n\n        var value = prompt('Enter Value for Max applicants')\n        if(!isNaN(value) && value){\n            \n            const jobs = [...this.state.jobs]\n            if(jobs[idx].curr_applicants > value){\n                alert(\"Cant change value to less than current number of applicants\")\n            }\n            else if(value === '0') alert(\"Cant change value to 0 \")\n            else{\n                jobs[idx].applicants = value\n                const obj = jobs[idx]\n                axios\n                    .post(\"http://localhost:5000/recruiter/editJob\",obj)\n                    .then(response => {\n                        this.setState({jobs :jobs});\n                        alert(\"Changes Saved :)\")\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n            }\n        }\n        else alert(\"Invalid value\")\n    }\n\n    positions = (idx)=>{\n\n        var value = prompt('Enter Value for Max positions')\n        \n        if(!isNaN(value) && value){    \n            const jobs = [...this.state.jobs]\n            if(jobs[idx].curr_positions > value){\n                alert(\"Cant change value to less than current number of positions\")\n            }\n            else if(value === '0') alert(\"Cant change value to 0 \")\n            else{\n                jobs[idx].positions = value\n                const obj = jobs[idx]\n                axios\n                    .post(\"http://localhost:5000/recruiter/editJob\",obj)\n                    .then(response => {\n                        this.setState({jobs :jobs});\n                        alert(\"Changes Saved :)\")\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n            }\n        }\n        else alert(\"Invalid value\")\n    }\n\n \n    delete = (idx) => () => {\n        console.log(idx)\n        const newJobs = [...this.state.jobs]\n        const obj = newJobs[idx]\n\n        console.log(\"this job should be deleted \",obj)\n\n        axios\n        .post(\"http://localhost:5000/recruiter/deleteJob\",obj)\n        .then(response => {\n            newJobs.splice(idx, 1)\n            console.log(newJobs)\n            this.setState({ jobs: newJobs })\n            alert(\"Job deleted\")\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    view = (idx) =>() =>{\n        localStorage.setItem(\"job_id\",this.state.jobs[idx]._id)\n        this.props.history.push(\"/RecruiterViewApps\");\n    }\n\n    render() {\n    return (\n      <div>\n       <Navbar bg=\"dark\" variant=\"dark\">\n            <Nav className=\"mr-auto\">\n                <Link to=\"/ActiveJobs\" className=\"navbar-brand\">Job Listings</Link>\n                <li className=\"navbar-item\">\n                    <Link to=\"/RecruiterHome\" className=\"nav-link\">Home</Link>\n                </li>   \n                <li className=\"navbar-item\">\n                    <Link to=\"/CreateJob\" className=\"nav-link\">Create Job</Link>\n                </li>\n                <li className=\"navbar-item\">\n                    <Link to=\"/RecruiterProfile\" className=\"nav-link\">My Profile</Link>\n                </li>  \n                <li className=\"navbar-item\">\n                    <Link to=\"Employees\" className=\"nav-link\">My Employees</Link>\n                </li>            \n            </Nav>\n            <Link to=\"/\" className=\"nav-link\">Logout</Link>    \n        </Navbar>\n        <br/><br/><br/><br/>\n        <h1 style={{ textAlign: \"center\" }}>View Job Listings</h1><br /><br/>\n\n\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                    <th>Job Title</th>\n                    <th>Posted Date</th>\n                    <th>Deadline</th>\n                    <th>Max Applicants</th>\n                    <th>Max Positions</th>\n                    <th>Remaining Positions</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                    <th>View Applications</th>\n                </tr>\n            </thead>\n            <tbody>\n                {this.state.jobs.map((job,idx) =>{\n                    return(\n                        <tr>\n                        <td>{this.state.jobs[idx].title}</td>\n                        <td>{moment(this.state.jobs[idx].date).format(\"DD/MM/YY\")}</td>\n                        <td>{moment(this.state.jobs[idx].deadline).format(\"DD/MM/YY\")}</td>\n                        <td>{this.state.jobs[idx].applicants}</td>\n                        <td>{this.state.jobs[idx].positions}</td>\n                        <td>{this.state.jobs[idx].positions - this.state.jobs[idx].curr_positions}</td>\n\n                        <td>\n                        <DropdownButton variant=\"warning\" as={ButtonGroup} title=\"Edit\">\n                        <Dropdown.Item>\n                            <div  onClick={()=>{this.deadline(idx);}}>Deadline</div>\n                        </Dropdown.Item>\n                        <Dropdown.Item>\n                            <div  onClick={()=>{this.applicants(idx);}}>Max Applicants</div>\n                        </Dropdown.Item>\n                        <Dropdown.Item>\n                            <div  onClick={()=>{this.positions(idx);}}>Max Positions</div>\n                        </Dropdown.Item>\n                       \n                        </DropdownButton>\n                        </td>\n                        <td><Button  variant =\"danger\" className=\"btn btn-primary\" value=\"delete\" onClick={this.delete(idx)}>Delete Job</Button></td>\n                        <td><Button  variant =\"info\" className=\"btn btn-primary\" value=\"view\" onClick={this.view(idx)}>View Applications</Button></td>\n                        \n                        </tr>\n                    )\n                })}\n            </tbody>\n        </Table>\n\n      </div>\n\n    );\n  }\n}\n","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterViewApps.js",["117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Box from '@material-ui/core/Box';\nimport axios from \"axios\";\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\n\nimport moment from 'moment'\nimport Form from 'react-bootstrap/Form'\n\n\nimport RecruiterJobs from './RecruiterJobs'\n\nexport default class RecruiterViewApps extends Component {\n\n    state = {\n        email : \"\",\n        job_id : \"\",\n        apps : [],\n        sort: \"username\",\n        order: \"ascending\"\n    }\n\n    componentDidMount(){\n\n        const newObj = {\n            email: localStorage.getItem(\"email\"),\n            type: localStorage.getItem(\"type\"),\n            job_id: localStorage.getItem(\"job_id\"),\n        };\n        if (newObj.type !== \"Recruiter\") this.props.history.push(\"/\");\n        this.setState({ email: newObj.email });\n\n        axios\n        .post(\"http://localhost:5000/recruiter/viewApps\",newObj)\n        .then(response => {\n            this.setState({ apps: response.data });\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    goBack = ()=>{\n        localStorage.setItem(\"job_id\",'')\n        console.log(localStorage.getItem(\"job_id\"))\n        this.props.history.push(\"/ActiveJobs\");\n\n    }\n    checkButtonType = (app)=>{\n        //3 types : apply , full , applied\n\n        //1.check if applied:\n        if(app.status === 'Shortlisted')return \"Shortlisted\"\n        if(app.status === 'Applied')return \"Applied\"\n        if(app.status === 'Accepted')return \"Accepted\"\n\n    }\n\n    shortlist = (idx)=>()=>{\n\n        axios\n        .post(\"http://localhost:5000/application/shortlist\",this.state.apps[idx])\n        .then(response => {\n           const copy = [...this.state.apps]\n           copy[idx].status= 'Shortlisted'\n           this.setState({apps : copy})\n           alert(\"Application has been shortlisted for further rounds\")\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    }\n\n    accept = (idx)=>()=>{\n        const copy = [...this.state.apps]\n           copy[idx].status= 'Accepted'\n           copy[idx].join = new Date()\n           this.setState({apps : copy})\n\n        console.log(\"GIVEN ACCEPT APP DATA..\",this.state.apps[idx])\n        \n        axios\n        .post(\"http://localhost:5000/application/accept\",this.state.apps[idx])\n        .then(response => {\n           console.log(response.data)\n           alert(\"Application has been accepted!!\")\n           if(response.data == \"1\"){\n\n               alert(\"All Positions have been filled!! Job is now Inactive\")\n\n               const newObj = {job_id: localStorage.getItem(\"job_id\"),email : copy[idx].email_applicant};\n               axios\n                .post(\"http://localhost:5000/recruiter/viewApps\",newObj)\n                .then(response => {\n                    this.setState({ apps: response.data });\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n           }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    reject = (idx)=>()=>{\n\n        axios\n        .post(\"http://localhost:5000/application/reject\",this.state.apps[idx])\n        .then(response => {\n            alert(\"Application has been Rejected\")\n            const copy = [...this.state.apps]\n            copy[idx].status= 'Rejected'\n            copy.splice(idx, 1)\n            this.setState({apps : copy})\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    sort = e => {\n\n        const copy = this.state.apps\n\n        if (this.state.order === \"ascending\") {\n            switch (this.state.sort) {\n                case \"rating\":\n                    copy.sort((a, b) => (a.rate > b.rate) ? 1 : -1);\n                    \n                    break;\n                case \"date\":\n                    copy.sort((a, b) => (a.date > b.date) ? 1 : -1);\n                    break;\n                case \"username\":\n                    copy.sort((a, b) => (a.username > b.username) ? 1 : -1);\n                    console.log(\"heyyy\")\n                    break;\n            }\n        }\n        else if (this.state.order === \"descending\") {\n            switch (this.state.sort) {\n                case \"username\":\n                    copy.sort((a, b) => (a.username > b.username) ? -1 : 1);\n                    console.log(\"heyyy\")\n                    break;\n                case \"date\":\n                    copy.sort((a, b) => (a.date > b.date) ? -1 : 1);\n                    break;\n                case \"rating\":\n                    copy.sort((a, b) => (a.rate > b.rate) ? -1 : 1);\n                    break;\n            }\n        }\n\n        this.setState({ apps: copy })\n    }\n\n    sortChange = e => {\n        console.log(\"value is for sort\", e.target.value)\n\n        this.setState({ sort: e.target.value })\n        console.log(this.state.sort)\n\n    }\n\n    orderChange = e => {\n        console.log(\"value is for order\", e.target.value)\n\n        this.setState({ order: e.target.value })\n        console.log(this.state.order)\n    }\n\n\n\n\n\n    render(){\n        return(\n            <div>\n                <Button variant=\"success\" size=\"lg\" onClick={this.goBack}>GO BACK TO JOB LISTINGS</Button>\n\n                <br></br><br></br> <br></br> \n\n                <Form inline>\n                    <Form.Control as=\"select\" className=\"mr-sm-2\" defaultValue={this.state.sort} onClick={this.sortChange}>\n                        <option value=\"username\">Applicant Name</option>\n                        <option value=\"date\">Date of Application</option>\n                        <option value=\"rating\">Applicant Rating</option>\n                    </Form.Control>\n                    <Form.Control as=\"select\" className=\"mr-sm-2\" defaultValue={this.state.order} onClick={this.orderChange} >\n                        <option value=\"ascending\">ascending</option>\n                        <option value=\"descending\">descending</option>\n                    </Form.Control>\n                    <Button style={{ marginRight: 15 }} onClick={this.sort} variant=\"outline-info\">Sort</Button>\n                </Form>\n                 <br></br><br></br><br></br>   \n                <Table striped bordered hover  responsive=\"lg\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Submitted Date</th>\n                        <th>STATEMENT OF PURPOSE</th>\n                        <th >Education</th>\n                        <th>Skills</th>\n                        <th>Applicant Rating</th>\n                        <th>Status</th>\n                        <th>Shortlist/Accept</th>\n                        <th>Reject</th>\n                    </tr>\n\n                   \n                </thead>\n               \n                <tbody>\n                \n                    {this.state.apps.map((app,idx) =>{\n                        const select = this.checkButtonType(app)\n                        \n                        var mx= 0\n                        if(this.state.apps[idx].education.length >this.state.apps[idx].skills.length )mx = this.state.apps[idx].education.length\n                        else mx= this.state.apps[idx].skills.length\n                        if(!mx)mx= 1\n\n                        var skills = this.state.apps[idx].skills.toString()\n                        console.log(mx)\n                        \n                        return(\n                            <tr>\n                            <td >{this.state.apps[idx].username}</td>\n                            <td >{moment(this.state.apps[idx].date).format(\"DD/MM/YY\")}</td>\n                            <td>{this.state.apps[idx].sop}</td>\n                            \n                            {this.state.apps[idx].education.length!==0 && \n                            this.state.apps[idx].education.map((edu,idx) =>{\n                                return(\n                                    <div>\n                                    <td><b>Institute</b><br/>{edu.institute}</td>\n                                    <td><b>StartYear</b><br/>{edu.startyear}</td>\n                                    <td><b>End Year</b><br/>{edu.endyear}</td>\n                                    </div>\n                                )\n                            })}\n                            {this.state.apps[idx].education.length=== 0 &&<td>Not Filled</td> }\n                            <td>{skills===''? \"Not Filled\": skills}</td>\n                            \n\n                            <td>{this.state.apps[idx].rate}</td>\n                            \n                            {select === 'Applied' && <td ><Button variant=\"outline-primary\" value=\"edit\">Applied</Button></td> }\n                            {select === 'Shortlisted' && <td ><Button variant=\"outline-warning\" value=\"edit\">Shortlisted</Button></td> }\n                            {select === 'Accepted' && <td ><Button variant=\"outline-success\" value=\"edit\">Accepted</Button></td> }\n\n\n                            {select === 'Applied' &&  <td ><Button variant=\"warning\" className=\"btn btn-primary\" value=\"edit\" onClick={this.shortlist(idx)}>Shortlist</Button></td>}\n                            {select === 'Shortlisted' &&  <td ><Button variant=\"success\" className=\"btn btn-primary\" value=\"edit\" onClick={this.accept(idx)}>Accept</Button></td>}\n                            \n                            {select !== 'Accepted' && <td ><Button variant=\"danger\" className=\"btn btn-primary\" value=\"edit\" onClick={this.reject(idx)}>Reject</Button></td>}\n                            </tr>\n                        )})}\n                </tbody>\n                </Table>           \n\n            </div>\n        )\n    }\n}","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterProfile.js",["130","131","132","133","134","135","136","137"],"import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Box from '@material-ui/core/Box';\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from 'react-bootstrap/FormControl'\nimport { Button, FormGroup, ControlLabel } from \"react-bootstrap\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport default class RecruiterProfile extends Component {\n\n    state ={\n        username:\"\",\n        email:\"\",\n        bio:\"\",\n        phone :\"\",\n        rate : \"\"\n    }\n\n    componentDidMount(){\n        const newUser = {\n            email: localStorage.getItem(\"email\"),\n            type: localStorage.getItem(\"type\")\n        };\n        if (newUser.type !== \"Recruiter\") this.props.history.push(\"/\");\n\n        this.setState({ email: newUser.email });\n\n        axios\n            .post(\"http://localhost:5000/user\", newUser)\n            .then(response => {\n                this.setState({ username: response.data.username });\n                this.setState({ phone: response.data.phone });\n                this.setState({ bio: response.data.bio });\n                this.setState({ rate: response.data.rate });\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    bioChange = e => {\n        this.setState({ bio: e.target.value })\n    }\n    nameChange = e => {\n        this.setState({ username: e.target.value })\n    }\n    phoneChange = e => {\n        this.setState({ phone: e.target.value })\n    }\n\n    Validation(newUser)\n    {\n        var phone = newUser.phone\n        //Pattern:\n        var pattern = \"/^\\d{10}$/\";\n        if(phone && !(/^\\d{10}$/.test(phone))){\n            alert(\"Enter Valid phone number\");\n            console.log(phone.match(/^\\d{10}$/))\n            console.log(phone)\n            return false;\n        }\n\n        const username = newUser.username\n\n        if(!username){\n            alert(\"Username field cant be empty!!\");\n            return false\n        }\n\n        return true;\n    }\n\n    submit = e=>{\n\n\n        const newUser={\n            username :this.state.username,\n            email : this.state.email,\n            phone : this.state.phone,\n            bio : this.state.bio\n        }\n\n        var val = this.Validation(newUser)\n        if(val){\n\n            axios\n            .post(\"http://localhost:5000/recruiter/editProfile\", newUser)\n            .then(response =>{\n                    alert(\"Changes saved!!\")\n                    this.setState({ username: response.data.username, phone : response.data.phone, bio:response.data.bio  });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    \n            localStorage.setItem(\"username\", this.state.username);\n\n        }\n        else{\n            console.log(\"jajaj\")\n            axios\n            .post(\"http://localhost:5000/user\", {email : this.state.email})\n            .then(response => {\n                this.setState({ username: response.data.username });\n                this.setState({ phone: response.data.phone });\n                this.setState({ bio: response.data.bio });\n\n                console.log(this.state.phone)\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Nav className=\"mr-auto\">\n                    <Link to=\"/RecruiterProfile\" className=\"navbar-brand\">My Profile</Link>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/RecruiterHome\" className=\"nav-link\">Home</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/CreateJob\" className=\"nav-link\">Create Job</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/ActiveJobs\" className=\"nav-link\">Job Listings</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"Employees\" className=\"nav-link\">My Employees</Link>\n                        </li>  \n                    </Nav>\n                    <Link to=\"/\" className=\"nav-link\">Logout</Link>\n                </Navbar>\n                <br /><br /><br />\n                <div style={{ textAlign: \"center\" }}><h1>My Profile</h1></div><br></br><br></br>\n\n                <Form>\n                <Row>\n                    <Col>\n                    <Form.Label>Username</Form.Label>\n                    <Form inline>\n                        <Form.Control type=\"text\" value={this.state.username} className=\"mr-sm-2\" onChange={this.nameChange} />\n                        <Button variant=\"info\" onClick ={this.submit}>Edit</Button>\n                    </Form>\n                    </Col>\n                    <Col>\n                    <Form.Label>PhoneNumber</Form.Label>\n                    <Form inline>\n                        <Form.Control type=\"text\" value={this.state.phone} className=\"mr-sm-2\" onChange={this.phoneChange} />\n                        <Button variant=\"info\"  onClick ={this.submit}>Edit</Button>\n                    </Form>\n                    </Col>\n                    <Col>\n                    <Form.Label>Email Id</Form.Label>\n                    <Form inline>\n                        <Form.Control type=\"text\" value={this.state.email} className=\"mr-sm-2\"  />\n                    </Form>\n                    </Col>\n                </Row>\n                </Form>\n                <br></br><br></br>\n                <div style={{width:\"400px\" ,margin:\"0 auto\"}}>\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Bio</Form.Label>\n                        <Form.Control as=\"textarea\" defaultValue={this.state.bio} onChange={this.bioChange}rows={10} />\n                        <Button variant=\"info\"  onClick ={this.submit}>Edit</Button>\n                    </Form.Group>\n                </div>\n               \n            </div>\n        )\n    }\n}","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/ApplicantMyApps.js",["138","139"],"import { ButtonGroup } from 'react-bootstrap/ButtonGroup'\nimport InputGroup from 'react-bootstrap/InputGroup'\n/* eslint-disable */\nimport * as RB from 'react-bootstrap';\n\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Box from '@material-ui/core/Box';\nimport Form from 'react-bootstrap/Form'\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button'\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SopModal from './Modal'\nimport Table from 'react-bootstrap/Table'\n\n\nimport moment from 'moment'\n\nexport default class ApplicantMyApps extends Component {\n\n    state ={\n        email : \"\",\n        apps : []\n    }\n\n    componentDidMount(){\n        const newUser = {\n            email: localStorage.getItem(\"email\"),\n            type: localStorage.getItem(\"type\")\n        };\n        if (newUser.type !== \"Applicant\") this.props.history.push(\"/\");\n\n        this.setState({ email: newUser.email });\n\n        axios.\n            post(\"http://localhost:5000/applicant/MyApps\",newUser)\n            .then(response => {\n                console.log(response.data)\n                this.setState({apps: response.data });\n                console.log('done')\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    \n    }\n\n    rateCalc = (rate_req) =>{\n        \n        var list = rate_req\n   \n        if(list.length == 0)return 0\n        else{\n            var sum = 0\n            for(var i in list){\n                sum += list[i].value\n            }\n            return (Math.round(sum * 100.0 / (list.length)) / 100)\n        }\n    }\n\n    edit =(idx) =>{\n\n        let apps = [...this.state.apps]\n        let app_req = apps[idx]\n        let rate_req = [...app_req.rating]\n        let rate = app_req.rate\n\n        const curr = this.state.email\n\n        var emails = rate_req?.map((obj) => obj.email)\n        console.log(\"HHOO\",app_req)\n\n        if(emails !== undefined && emails.includes(curr)){\n            var value = prompt(\"Rate Again?(Y/N)\")\n            if(value == 'Y'){\n                value = prompt(\"Rate between(0,5)\") - '0'\n                if([0,1,2,3,4,5].includes(value)){\n                    for(var i in rate_req){\n                        if(rate_req[i].email == curr){\n                            rate_req[i].value = value \n                        }\n                    }\n                    \n                    const newObj = {\n                        job_id : this.state.apps[idx].job_id,\n                        rating : rate_req,\n                        rate : this.rateCalc(rate_req)\n                    }\n                    axios.post(\"http://localhost:5000/editRating/job\",newObj)\n                         .then(response =>{\n                            apps[idx].rating = rate_req\n                            apps[idx].rate = newObj.rate\n                            this.setState({apps})\n                        })\n                }\n                else alert(\"Invalid Value!!\")\n            }\n        }\n        else{\n            var value = prompt(\"Rate between(0,5)\") - '0'\n            if([0,1,2,3,4,5].includes(value)){\n                rate_req.push({email : curr, value : value})\n\n                const newObj = {\n                    job_id : this.state.apps[idx].job_id,\n                    rating : rate_req,\n                    rate : this.rateCalc(rate_req)\n                }\n                axios.post(\"http://localhost:5000/editRating/job\",newObj)\n                     .then(response =>{\n                        console.log(\"HAHAJHAJA\")\n                        apps[idx].rating = rate_req\n                        apps[idx].rate = newObj.rate\n                        this.setState({apps})\n                    })\n            }\n            else alert(\"Invalid Value!!\")\n        }\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Nav className=\"mr-auto\">\n                        <Link to=\"/SearchJob\" className=\"navbar-brand\">My Applications</Link>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/ApplicantHome\" className=\"nav-link\">Home</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/ApplicantHome\" className=\"nav-link\">Search Job</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/ApplicantProfile\" className=\"nav-link\">Profile</Link>\n                        </li>\n                    </Nav>\n\n                    <Link to=\"/\" className=\"nav-link\">Logout</Link>\n                </Navbar>\n                <br /><br /><br /><br />\n                <h1 style={{ textAlign: \"center\" }}>My Applications</h1><br />\n                <Table striped bordered hover  responsive=\"lg\">\n                <thead>\n                    <tr>\n                        <th>Job Title</th>\n                        <th>Date of Joining</th>\n                        <th>Salary</th>\n                        <th>Recruiter</th>\n                        <th>Application Status</th>\n                        <th>Job status</th>\n                        <th>Rating of Job</th>\n                        <th>Select</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {this.state.apps.map((app,idx) =>{\n\n                    return(\n                        <tr>\n                            <td>{this.state.apps[idx].title}</td>\n                            <td>{moment(this.state.apps[idx].join).format(\"DD/MM/YY\")}</td>\n                            <td>{this.state.apps[idx].salary}</td>\n                            <td>{this.state.apps[idx].recruiter}</td>\n                            \n\n                            {this.state.apps[idx].status === 'Applied' && <td><Button variant=\"outline-info\" value=\"edit\">Applied</Button></td> }\n                            {this.state.apps[idx].status === 'Shortlisted' && <td><Button variant=\"outline-warning\" value=\"edit\">Shortlisted</Button></td> }\n                            {this.state.apps[idx].status === 'Accepted' && <td><Button variant=\"outline-success\" value=\"edit\">Accepted</Button></td> }\n                            {this.state.apps[idx].status === 'Rejected' && <td><Button variant=\"outline-danger\" value=\"edit\">Rejected</Button></td> }\n                            {this.state.apps[idx].status === 'Deleted' && <td><Button variant=\"outline-dark\" value=\"edit\">Deleted</Button></td> }\n\n\n                            <td>{this.state.apps[idx].job_status}</td>\n                            <td>{this.state.apps[idx].rate}</td>\n                            {this.state.apps[idx].status === 'Accepted' &&<td><Button variant=\"warning\" className=\"btn btn-primary\" value=\"edit\" onClick={()=>this.edit(idx)}>Rate Job</Button></td>}\n                            {this.state.apps[idx].status !== 'Accepted' &&<td><Button variant=\"warning\" className=\"btn btn-primary\" value=\"edit\" disabled>Rate Job</Button></td>}\n                            \n\n                        </tr>\n                    )\n                })}\n                </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n\n","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/RecruiterEmployees.js",["140","141","142","143","144","145","146","147","148","149","150","151"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Box from '@material-ui/core/Box';\nimport axios from \"axios\";\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport Form from \"react-bootstrap/Form\";\n\n\nexport default class RecruiterEmployees extends Component {\n\n    state ={\n        emps : [],\n        email: \"\",\n        username : \"\",\n        sort : \"username\",\n        order:\"ascending\"\n    }\n\n    componentDidMount(){\n\n        const newUser = {\n            email: localStorage.getItem(\"email\"),\n            type: localStorage.getItem(\"type\")\n        };\n        if (newUser.type !== \"Recruiter\") this.props.history.push(\"/\");\n        this.setState({ email: newUser.email });\n        \n        axios\n        .post(\"http://localhost:5000/recruiter/employee\",newUser)    \n        .then(\n            response =>{\n                this.setState({emps : response.data})\n\n                var arr = this.state.emps.map((emp) => emp.rating)\n                this.setState({ratings : arr})\n               \n            }\n        )\n    }\n\n    calcRating = (rate_req) =>{\n        var list = rate_req\n        if(list.length == 0)return 0\n        else{\n            var sum = 0\n            for(var i in list){\n                sum += list[i].value\n            }\n            return (Math.round(sum * 100.0 / (list.length)) / 100)\n        }\n    }\n\n    edit = (idx) =>{\n        let emps = [...this.state.emps]\n        let emp_req = emps[idx]\n        let rate_req = [...emp_req.rating]\n\n        //so required ratings is in rate_req\n       \n        const curr = this.state.email\n\n        var emails = rate_req?.map((obj) => obj.email)\n        if(emails !== undefined && emails.includes(curr)){\n            var value = prompt(\"Rate Again?(Y/N)\")\n            if(value == 'Y'){\n                value = prompt(\"Rate between(0,5)\") - '0'\n                if([0,1,2,3,4,5].includes(value)){\n                    for(var i in rate_req){\n                        if(rate_req[i].email == curr){\n                            rate_req[i].value = value \n                        }\n                    }\n                    \n                    const newObj = {\n                        email : this.state.emps[idx].email,\n                        ratings : rate_req,\n                        rate : this.calcRating(rate_req)\n                    }\n                    axios.post(\"http://localhost:5000/editRating\",newObj)\n                         .then(response =>{\n                            emps[idx].rating = rate_req\n                            emps[idx].rate = newObj.rate\n                            this.setState({emps})\n                        })\n                }\n                else alert(\"Invalid Value!!\")\n            }\n        }\n        else{\n            var value = prompt(\"Rate between(0,5)\") - '0'\n            if([0,1,2,3,4,5].includes(value)){\n                rate_req.push({email : curr, value : value})\n\n                const newObj = {\n                    email : this.state.emps[idx].email,\n                    ratings : rate_req,\n                    rate : this.calcRating(rate_req)\n                }\n                axios.post(\"http://localhost:5000/editRating\",newObj)\n                     .then(response =>{\n                         console.log(\"HAHAJHAJA\")\n                        emps[idx].rating = rate_req\n                        emps[idx].rate = newObj.rate\n                        this.setState({emps})\n                    })\n            }\n            else alert(\"Invalid Value!!\")\n        }\n    }\n\n    sort = e => {\n\n        const copy = this.state.emps\n\n        if (this.state.order === \"ascending\") {\n            switch (this.state.sort) {\n                case \"rating\":\n                    copy.sort((a, b) => (a.rate > b.rate) ? 1 : -1);\n                    \n                    break;\n                case \"join\":\n                    copy.sort((a, b) => (a.join > b.join) ? 1 : -1);\n                    break;\n                case \"username\":\n                    copy.sort((a, b) => (a.username > b.username) ? 1 : -1);\n                    break;\n                case \"title\":\n                    copy.sort((a, b) => (a.title > b.title) ? 1 : -1);\n                    break;    \n            }\n        }\n        else if (this.state.order === \"descending\") {\n            switch (this.state.sort) {\n                case \"username\":\n                    copy.sort((a, b) => (a.username > b.username) ? -1 : 1);\n                    break;\n                case \"join\":\n                    copy.sort((a, b) => (a.join > b.join) ? -1 : 1);\n                    break;\n                case \"rating\":\n                    copy.sort((a, b) => (a.rate > b.rate) ? -1 : 1);\n                    break;\n\n                case \"title\":\n                    copy.sort((a, b) => (a.title > b.title) ? -1 : 1);\n                    break;\n            }\n        }\n\n        this.setState({ emps: copy })\n    }\n\n    sortChange = e => {\n        console.log(\"value is for sort\", e.target.value)\n\n        this.setState({ sort: e.target.value })\n        console.log(this.state.sort)\n\n    }\n\n    orderChange = e => {\n        console.log(\"value is for order\", e.target.value)\n\n        this.setState({ order: e.target.value })\n        console.log(this.state.order)\n    }\n\n    render() {\n        \n        return (\n            \n            <div>\n                \n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Nav className=\"mr-auto\">\n                    <Link to=\"/Employees\" className=\"navbar-brand\">My Employees</Link>\n                    <li className=\"navbar-item\">\n                        <Link to=\"/RecruiterHome\" className=\"nav-link\">Home</Link>\n                    </li>\n                    <li className=\"navbar-item\">\n                        <Link to=\"/ActiveJobs\" className=\"nav-link\">Job Listings</Link>\n                    </li>     \n                    <li className=\"navbar-item\">\n                        <Link to=\"/CreateJob\" className=\"nav-link\">Create Job</Link>\n                    </li>   \n                    <li className=\"navbar-item\">\n                        <Link to=\"/RecruiterProfile\" className=\"nav-link\">My Profile</Link>\n                    </li>      \n                    </Nav>\n                    <Link to=\"/\" className=\"nav-link\">Logout</Link> \n                </Navbar>   \n                <br></br><br></br><br></br>  \n                <h1 style={{ textAlign: \"center\" }}>View My Employees</h1><br />\n                <br></br><br></br>\n                \n                <Form inline>\n                    <Form.Control as=\"select\" className=\"mr-sm-2\" defaultValue={this.state.sort} onClick={this.sortChange}>\n                        <option value=\"username\">Applicant Name</option>\n                        <option value=\"join\">Date of Joining</option>\n                        <option value=\"title\">Job title</option>\n                        <option value=\"rating\">Applicant rating</option>\n                    </Form.Control>\n                    <Form.Control as=\"select\" className=\"mr-sm-2\" defaultValue={this.state.order} onClick={this.orderChange} >\n                        <option value=\"ascending\">ascending</option>\n                        <option value=\"descending\">descending</option>\n                    </Form.Control>\n                    <Button style={{ marginRight: 15 }} onClick={this.sort} variant=\"outline-info\">Sort</Button>\n                </Form>\n                 <br></br><br></br><br></br>   \n                \n                <Table striped bordered hover  responsive=\"lg\">\n                    <thead>\n                        <tr>\n                            <th>Employee Name</th>\n                            <th>Date of Joining</th>\n                            <th>Job Type</th>\n                            <th>Job Title</th>\n                            <th>Rating</th>\n                            <th>Select</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {this.state.emps.map((emp,idx) =>{\n                            \n\n                            return(\n                                <tr>\n                                    <td>{this.state.emps[idx].username}</td>\n                                    <td>{this.state.emps[idx].join}</td>\n                                    <td>{this.state.emps[idx].job_type}</td>\n                                    <td>{this.state.emps[idx].title}</td>\n                                    <td>{this.state.emps[idx].rate}</td>\n                                    <td><Button variant=\"warning\" className=\"btn btn-primary\" value=\"edit\" onClick={()=>this.edit(idx)}>Rate Employee</Button></td>\n                                </tr>\n                            )\n\n                        })}\n\n                    </tbody>\n                    </Table>\n            </div>\n  \n        )\n    }\n}","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/ApplicantProfile.js",["152","153"],"/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/ApplicantSearchJob.js",["154","155"],"import { ButtonGroup } from 'react-bootstrap/ButtonGroup'\nimport InputGroup from 'react-bootstrap/InputGroup'\n/* eslint-disable */\nimport * as RB from 'react-bootstrap';\n\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Box from '@material-ui/core/Box';\nimport Form from 'react-bootstrap/Form'\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button'\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SopModal from './Modal'\nimport Table from 'react-bootstrap/Table'\n\n\n\nimport moment from 'moment'\n\n\n\nexport default class ApplicantSearchJob extends Component {\n\n    state = {\n        username: \"\",\n        email: \"\",\n        jobs: [],\n        search: \"\",\n        sort: \"\",\n        order: \"\",\n        show : false,\n        sop : \"\",\n        myApps : [],\n        curr_job :{\n            email : \"\",\n            job_id: \"\"\n        },\n        filterJob : \"\",\n        filterDuration : \"\",\n        SalaryMax : \"\",\n        SalaryMin : \"\"\n    }\n\n    componentDidMount() {\n\n        const newUser = {\n            email: localStorage.getItem(\"email\"),\n            type: localStorage.getItem(\"type\")\n        };\n        if (newUser.type !== \"Applicant\") this.props.history.push(\"/\");\n\n        this.setState({ email: newUser.email });\n\n        axios\n            .post(\"http://localhost:5000/user\", newUser)\n            .then(response => {\n                this.setState({ username: response.data.username });\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        axios\n            .get(\"http://localhost:5000/jobslist\")\n            .then(response => {\n                this.setState({ jobs: response.data })\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        axios\n            .post(\"http://localhost:5000/applicant/getAllApplications\",newUser)\n            .then(response =>{\n                this.setState({ myApps: response.data })\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    searchChange = e => {\n        this.setState({ search: e.target.value })\n    }\n\n    sortChange = e => {\n        console.log(\"value is for sort\", e.target.value)\n\n        this.setState({ sort: e.target.value })\n        console.log(this.state.sort)\n\n    }\n\n    orderChange = e => {\n        console.log(\"value is for order\", e.target.value)\n\n        this.setState({ order: e.target.value })\n        console.log(this.state.order)\n    }\n\n    showModal = (idx)=>()=>{\n\n        var list = this.state.myApps.map((app)=>{return app.status})\n        \n        var count = 0\n        var accept =0\n        for(var i=0;i<list.length;i++){\n            if(list[i] === 'Applied')count++\n            if(list[i] === 'Shortlisted')count++\n            if(list[i] === 'Accepted')accept=1\n        }\n\n        if(count >= 10){alert(\"Applied to 10 jobs already !!\")}\n        else if(accept){alert(\"Already accepted at a job!!\")}\n        else{\n            this.setState({\n                show : !this.state.show\n            })\n    \n            const newJob = {\n                email : this.state.jobs[idx].email,\n                job_id : this.state.jobs[idx]._id\n            }\n    \n            this.setState({\n                curr_job : newJob\n            })\n        }        \n    }\n\n    apply = (sopText,job)=>{\n        this.setState({sop : sopText})\n\n        //Checking if i can apply?\n        \n\n        //Assuming applicant can apply:\n        //need to change data in all 3 databases\n\n        console.log(job.email)\n      \n        const newApplication = {\n\n            email_applicant : this.state.email,\n            email_recruiter : job.email,\n            sop :sopText,\n            job_id : job.job_id,\n            username: this.state.username\n        }\n        console.log(this.state.username)\n        //add application in database\n        axios\n            .post(\"http://localhost:5000/applicant/submitApplication\",newApplication)\n            .then(response=>{\n                console.log(\"great\")\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        /*\n        //change count of number of applications user has applied\n        const obj ={\n            email : this.state.email\n        }\n        axios\n            .post(\"http://localhost:5000/applicant/ApplicationCount\",obj)\n            .then(response=>{\n                console.log(\"increased count\")\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        */\n\n        //change count of applicants in job_id\n        const obj2 = {\n            job_id : job.job_id\n        }\n        axios\n        .post(\"http://localhost:5000/recruiter/ApplicationCount\",obj2)\n        .then(response=>{\n            console.log(\"increased count\")\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n        alert(\"Application has been submitted!!\")\n\n        this.setState({\n            show : !this.state.show\n        })\n\n        window.location.reload()\n       \n    }\n\n    checkButtonType = (job)=>{\n        //3 types : apply , full , applied\n\n        //1.check if applied:\n        if(job.state == 'Inactive')return \"inactive\"\n        var AppsList = this.state.myApps.map((app)=>{return app.job_id})\n        \n        if(AppsList.includes(job._id)) return \"applied\"\n\n        if(job.curr_applicants === job.applicants)return \"full\"\n        return \"apply\"\n    }\n\n\n    sort = e => {\n\n        const copy = this.state.jobs\n\n        if (this.state.order === \"ascending\") {\n            switch (this.state.sort) {\n                case \"salary\":\n                    copy.sort((a, b) => (a.salary > b.salary) ? 1 : -1);\n                    break;\n                case \"duration\":\n                    copy.sort((a, b) => (a.duration > b.duration) ? 1 : -1);\n                    break;\n                case \"rating\":\n                    copy.sort((a, b) => (a.rate > b.rate) ? 1 : -1);\n                    break;\n            }\n        }\n        else if (this.state.order === \"descending\") {\n            switch (this.state.sort) {\n                case \"salary\":\n                    copy.sort((a, b) => (a.salary > b.salary) ? -1 : 1);\n                    break;\n                case \"duration\":\n                    copy.sort((a, b) => (a.duration > b.duration) ? -1 : 1);\n                    break;\n                case \"rating\":\n                    copy.sort((a, b) => (a.rate > b.rate) ? -1 : 1);\n                    break;\n            }\n        }\n\n        this.setState({ jobs: copy })\n    }\n\n    onchange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    minChange = e =>{\n        this.setState({ minSalary: e.target.value })\n    }\n    maxChange = e =>{\n        this.setState({ maxSalary: e.target.value })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Nav className=\"mr-auto\">\n                        <Link to=\"/SearchJob\" className=\"navbar-brand\">Search Job</Link>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/ApplicantHome\" className=\"nav-link\">Home</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/MyApps\" className=\"nav-link\">My Applications</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/ApplicantProfile\" className=\"nav-link\">Profile</Link>\n                        </li>\n                    </Nav>\n\n                    <Link to=\"/\" className=\"nav-link\">Logout</Link>\n                </Navbar>\n                <br /><br /><br /><br />\n                <h1 style={{ textAlign: \"center\" }}>View Job Listings</h1><br /><br/>\n\n                <Form>\n                <Row>\n                    <Col>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={this.searchChange} />\n                        <Button variant=\"outline-info\">Search</Button>\n                    </Form>\n                    </Col>\n                    <Col>\n                    <Form.Label>Sort you Job Searches</Form.Label>\n\n                    <Form inline>\n                        <Form.Control as=\"select\" className=\"mr-sm-2\" defaultValue={this.state.sort} onClick={this.sortChange}>\n                            <option value=\"salary\">salary</option>\n                            <option value=\"duration\">duration</option>\n                            <option value=\"rating\">rating</option>\n\n                        </Form.Control>\n                        <Form.Control as=\"select\" className=\"mr-sm-2\" defaultValue={this.state.order} onClick={this.orderChange} >\n                            <option value=\"ascending\">ascending</option>\n                            <option value=\"descending\">descending</option>\n                        </Form.Control>\n                        <Button style={{ marginRight: 15 }} onClick={this.sort} variant=\"outline-info\">Sort</Button>\n                    </Form>\n                    </Col>\n                </Row>\n                </Form>\n    \n                <br></br><br></br>\n                <Form>\n                    <Row>\n                        <Col>\n                        <Form.Label>Filter based on Duration (in months)</Form.Label>\n                        <Form.Control as=\"select\" name=\"filterDuration\" defaultValue=\"\" onChange={this.onchange} value={this.state.duration}> \n                            <option></option>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                            <option>6</option>\n                            <option>7</option>\n                        </Form.Control>\n                        </Col>\n                        <Col>\n                        <Form.Label>Filter based on Job type</Form.Label>\n                        <Form.Control as=\"select\" name=\"filterJob\" defaultValue=\"Full-time\" defaultValue=\"\" onChange={this.onchange} value={this.state.type} >\n                                <option></option>\n                                <option>Full-time</option>\n                                <option>Part-time</option>\n                                <option>Work from Home</option>\n                            </Form.Control>\n                        </Col>\n                        <Col>\n                        <Form.Label>Filter based on Salary</Form.Label>\n                        <Form inline>\n                            <FormControl type=\"text\" placeholder=\"Minimum Salary\" className=\"mr-sm-2\" onChange={this.minChange} />\n                            <FormControl type=\"text\" placeholder=\"Maximum Salary\" className=\"mr-sm-2\" onChange={this.maxChange} />\n                           \n                        </Form>\n                        </Col>\n                    </Row>\n                </Form>\n\n                <br></br><br></br>\n\n                <Table striped bordered hover  responsive=\"lg\">\n                    <thead>\n                        <tr>\n                            <th>Job Title</th>\n                            <th>Recruiter Name</th>\n                            <th>Salary</th>\n                            <th>Duration(in Months)</th>\n                            <th>Job Type</th>\n                            <th>Deadline</th>\n                            <th>Rating of Job</th>\n                            <th>Select</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {this.state.jobs.map((job, idx) => {\n                            const today = new Date()\n                            if (moment(today).isAfter(job.deadline)) {\n                                return null;\n                            }\n                            const { search,filterJob, filterDuration,maxSalary,minSalary } = this.state;\n                            if (search !== '' && job.title.toLowerCase().indexOf(search.toLowerCase()) === -1) {\n                                return null\n                            }\n\n                            if(filterJob !== '' && job.type !== filterJob)return null\n                            if(filterDuration !== '' && job.duration >= filterDuration)return null\n                            if(maxSalary !== '' && job.salary > maxSalary)return null\n                            if(minSalary !== '' && job.salary < minSalary)return null\n\n\n                            \n                            const select = this.checkButtonType(job)\n\n\n                            return (\n                                <tr>\n                                    <td>{job.title}</td>\n                                    <td>{job.username}</td>\n                                    <td>{job.salary}</td>\n                                    <td>{job.duration}</td>\n                                    <td>{job.type}</td>\n                                    <td>{moment(job.deadline).format(\"DD/MM/YY\")}</td>\n                                    <td>{job.rate}</td>\n                                    {select === 'inactive' && <td><Button variant=\"dark\" className=\"btn btn-primary\" value=\"edit\">INACTIVE JOB</Button></td>}\n                                    {select === 'applied' && <td><Button variant=\"success\" className=\"btn btn-primary\" value=\"edit\">Applied</Button></td>}\n                                    {select === 'full' &&  <td><Button variant=\"info\" className=\"btn btn-primary\" value=\"edit\">Full</Button></td>}\n\n                                    {select === 'apply' && <td><Button variant=\"danger\" className=\"btn btn-primary\" value=\"edit\" onClick={this.showModal(idx)}>Apply</Button></td>}\n                                \n                                    <SopModal  show={this.state.show} apply={this.apply.bind(this) }  job={this.state.curr_job}/>    \n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n\n\n        )\n    }\n}","/home/manasvi/Job-Portal-Mern_stack/frontend/src/components/Modal.js",["156","157","158"],"import React, { Component } from 'react';\nimport {\n    Button, Modal, Form, ModalHeader, ModalBody, FormGroup, Label, Input\n} from 'reactstrap';\n\nexport default class SopModal extends Component {\n\n    state = {\n        sop: ''\n    }\n\n    onChange = (e)=>{\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit(e) {\n\n        var x = this.state.sop\n        this.props.apply(x,this.props.job)\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal isOpen={this.props.show}>\n                    <ModalHeader>Enter your SOP (not more than 250 words..)</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.onSubmit.bind(this)}>\n                            <textarea defaultValue={this.state.sop} onChange={this.onChange} rows=\"15\" cols=\"47\" name=\"sop\" />\n                            <Button color=\"dark\" style={{ marginTop: '2rem' }}>Submit Application</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\n",["159","160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":2,"column":42,"nodeType":"167","messageId":"168","endLine":2,"endColumn":46},{"ruleId":"165","severity":1,"message":"169","line":15,"column":10,"nodeType":"167","messageId":"168","endLine":15,"endColumn":26},{"ruleId":"165","severity":1,"message":"170","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"170","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"172","line":30,"column":11,"nodeType":"167","messageId":"168","endLine":30,"endColumn":16},{"ruleId":"165","severity":1,"message":"173","line":30,"column":18,"nodeType":"167","messageId":"168","endLine":30,"endColumn":26},{"ruleId":"165","severity":1,"message":"170","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"174","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":11},{"ruleId":"165","severity":1,"message":"175","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":13},{"ruleId":"165","severity":1,"message":"170","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"174","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":11},{"ruleId":"165","severity":1,"message":"170","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"174","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":11},{"ruleId":"165","severity":1,"message":"170","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"174","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":11},{"ruleId":"165","severity":1,"message":"176","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":19},{"ruleId":"165","severity":1,"message":"177","line":10,"column":18,"nodeType":"167","messageId":"168","endLine":10,"endColumn":27},{"ruleId":"165","severity":1,"message":"178","line":10,"column":29,"nodeType":"167","messageId":"168","endLine":10,"endColumn":41},{"ruleId":"165","severity":1,"message":"179","line":11,"column":15,"nodeType":"167","messageId":"168","endLine":11,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":130,"column":92,"nodeType":"182","endLine":130,"endColumn":107},{"ruleId":"165","severity":1,"message":"170","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"174","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":11},{"ruleId":"165","severity":1,"message":"170","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"166","line":2,"column":42,"nodeType":"167","messageId":"168","endLine":2,"endColumn":46},{"ruleId":"165","severity":1,"message":"183","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":14},{"ruleId":"165","severity":1,"message":"184","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":11},{"ruleId":"165","severity":1,"message":"174","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":11},{"ruleId":"165","severity":1,"message":"185","line":8,"column":8,"nodeType":"167","messageId":"168","endLine":8,"endColumn":22},{"ruleId":"165","severity":1,"message":"186","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":19},{"ruleId":"165","severity":1,"message":"187","line":10,"column":8,"nodeType":"167","messageId":"168","endLine":10,"endColumn":16},{"ruleId":"165","severity":1,"message":"188","line":18,"column":8,"nodeType":"167","messageId":"168","endLine":18,"endColumn":21},{"ruleId":"189","severity":1,"message":"190","line":95,"column":29,"nodeType":"191","messageId":"192","endLine":95,"endColumn":31},{"ruleId":"193","severity":1,"message":"194","line":136,"column":13,"nodeType":"195","messageId":"196","endLine":148,"endColumn":14},{"ruleId":"193","severity":1,"message":"194","line":151,"column":13,"nodeType":"195","messageId":"196","endLine":162,"endColumn":14},{"ruleId":"165","severity":1,"message":"170","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"174","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":11},{"ruleId":"165","severity":1,"message":"176","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":19},{"ruleId":"165","severity":1,"message":"177","line":10,"column":18,"nodeType":"167","messageId":"168","endLine":10,"endColumn":27},{"ruleId":"165","severity":1,"message":"178","line":10,"column":29,"nodeType":"167","messageId":"168","endLine":10,"endColumn":41},{"ruleId":"165","severity":1,"message":"197","line":60,"column":13,"nodeType":"167","messageId":"168","endLine":60,"endColumn":20},{"ruleId":"198","severity":1,"message":"199","line":60,"column":26,"nodeType":"200","messageId":"201","endLine":60,"endColumn":27,"suggestions":"202"},{"ruleId":"165","severity":1,"message":"186","line":1,"column":10,"nodeType":"167","messageId":"168","endLine":1,"endColumn":21},{"ruleId":"165","severity":1,"message":"203","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":18},{"ruleId":"165","severity":1,"message":"170","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"174","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":11},{"ruleId":"165","severity":1,"message":"185","line":8,"column":8,"nodeType":"167","messageId":"168","endLine":8,"endColumn":22},{"ruleId":"165","severity":1,"message":"186","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":19},{"ruleId":"165","severity":1,"message":"187","line":10,"column":8,"nodeType":"167","messageId":"168","endLine":10,"endColumn":16},{"ruleId":"189","severity":1,"message":"190","line":50,"column":24,"nodeType":"191","messageId":"192","endLine":50,"endColumn":26},{"ruleId":"189","severity":1,"message":"190","line":72,"column":22,"nodeType":"191","messageId":"192","endLine":72,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":76,"column":46,"nodeType":"191","messageId":"192","endLine":76,"endColumn":48},{"ruleId":"204","severity":1,"message":"205","line":97,"column":17,"nodeType":"167","messageId":"206","endLine":97,"endColumn":22},{"ruleId":"193","severity":1,"message":"194","line":123,"column":13,"nodeType":"195","messageId":"196","endLine":137,"endColumn":14},{"ruleId":"193","severity":1,"message":"194","line":140,"column":13,"nodeType":"195","messageId":"196","endLine":154,"endColumn":14},{"ruleId":"165","severity":1,"message":"186","line":1,"column":10,"nodeType":"167","messageId":"168","endLine":1,"endColumn":21},{"ruleId":"165","severity":1,"message":"203","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":18},{"ruleId":"165","severity":1,"message":"186","line":1,"column":10,"nodeType":"167","messageId":"168","endLine":1,"endColumn":21},{"ruleId":"165","severity":1,"message":"203","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":18},{"ruleId":"165","severity":1,"message":"177","line":3,"column":50,"nodeType":"167","messageId":"168","endLine":3,"endColumn":59},{"ruleId":"165","severity":1,"message":"207","line":3,"column":61,"nodeType":"167","messageId":"168","endLine":3,"endColumn":66},{"ruleId":"165","severity":1,"message":"208","line":3,"column":68,"nodeType":"167","messageId":"168","endLine":3,"endColumn":73},{"ruleId":"161","replacedBy":"209"},{"ruleId":"163","replacedBy":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AccordionSummary' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'Box' is defined but never used.","'axios' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'ControlLabel' is defined but never used.","'Row' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Navbar' is defined but never used.","'Nav' is defined but never used.","'DropdownButton' is defined but never used.","'ButtonGroup' is defined but never used.","'Dropdown' is defined but never used.","'RecruiterJobs' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'pattern' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\d.","Literal","unnecessaryEscape",["213","214"],"'InputGroup' is defined but never used.","no-redeclare","'value' is already defined.","redeclared","'Label' is defined but never used.","'Input' is defined but never used.",["211"],["212"],"no-global-assign","no-unsafe-negation",{"messageId":"215","fix":"216","desc":"217"},{"messageId":"218","fix":"219","desc":"220"},"removeEscape",{"range":"221","text":"222"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"223","text":"224"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1786,1787],"",[1786,1786],"\\"]